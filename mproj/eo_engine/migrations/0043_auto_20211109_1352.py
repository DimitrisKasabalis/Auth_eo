# Generated by Django 3.2.8 on 2021-11-09 13:52

from django.db import migrations, models


def to_screaming_case(token: str) -> str:
    return token.upper().replace('-', '_')


def difference(a_set: set, b_set: set) -> set:
    diff = b_set.difference(a_set)
    return diff


def forward_function(apps, schema_editor):
    from eo_engine.models.eo_source import EOSourceGroupChoices
    from eo_engine.models.eo_product import EOProductGroupChoices
    EOSource = apps.get_model("eo_engine", "EOSource")
    EOProduct = apps.get_model("eo_engine", "EOProduct")

    eo_objs = []
    for obj in EOSource.objects.all():
        obj.group = to_screaming_case(obj.group)
        eo_objs.append(obj)
    EOSource.objects.bulk_update(eo_objs, ['group'])

    eo_objs = []
    for obj in EOProduct.objects.all():
        obj.group = to_screaming_case(obj.group)
        eo_objs.append(obj)
    EOProduct.objects.bulk_update(eo_objs, ['group'])

    eo_sources_that_still_have_to_change = difference(
        {*list(EOSourceGroupChoices.values)},
        {*list(EOSource.objects.values_list('group', flat=True).distinct('group'))}
    )
    if eo_sources_that_still_have_to_change.__len__() > 0:
        print('++Warning: There are  EOSOURCE Groups that still need to change (manually)')
        for e in eo_sources_that_still_have_to_change:
            print(e)

    eo_produtcts_that_still_have_to_change = difference(
        {*list(EOProductGroupChoices.values)},
        {*list(EOProduct.objects.values_list('group', flat=True).distinct('group'))}
    )
    if eo_sources_that_still_have_to_change.__len__() > 0:
        print('++Warning: There are  EOPRODUCT Groups that still need to change (manually)')
        for e in eo_sources_that_still_have_to_change:
            print(e)


class Migration(migrations.Migration):
    dependencies = [
        ('eo_engine', '0042_alter_eosource_group'),
    ]

    operations = [
        migrations.AlterField(
            model_name='eoproduct',
            name='group',
            field=models.CharField(choices=[('AGRO_NDVI_1KM_V3_AFR', 'AUTH/AGRO/NDVI 1km, V3 Africa'),
                                            ('AGRO_NDVI_300M_V3_AFR', 'AUTH/AGRO/NDVI 300m, V3 Africa'),
                                            ('AGRO_VCI_1KM_V2_AFR', 'AUTH/AGRO/VCI 1km, V2 Africa'),
                                            ('AGRO_LAI_300M_V1_AFR', 'AUTH/AGRO/LAI 300m, V1 Africa'),
                                            ('AGRO_LAI_1KM_V2_AFR', 'AUTH/AGRO/LAI 1km, V2 Africa'),
                                            ('AGRO_WB_100_M_ETH', 'AGRO_WB_100_M_ETH'),
                                            ('AGRO_WB_100_M_GHA', 'AGRO_WB_100_M_GHA'),
                                            ('AGRO_WB_100_M_KEN', 'AGRO_WB_100_M_KEN'),
                                            ('AGRO_WB_100_M_MOZ', 'AGRO_WB_100_M_MOZ'),
                                            ('AGRO_WB_100_M_NER', 'AGRO_WB_100_M_NER'),
                                            ('AGRO_WB_100_M_RWA', 'AGRO_WB_100_M_RWA'),
                                            ('AGRO_WB_100_M_TUN', 'AGRO_WB_100_M_TUN'),
                                            ('AGRO_WB_100_M_ZAF', 'AGRO_WB_100_M_ZAF'),
                                            ('AGRO_WB_300_M_V_2_AFR', 'Agro Wb 300M V2 Afr'),
                                            ('MSG_3_KM_AFR', 'LSA-SAF 3km Africa'),
                                            ('VIIRS_1_DAY_AFR', 'VIIRS 1day AFR')], max_length=255),
        ),
        migrations.AlterField(
            model_name='eosource',
            name='group',
            field=models.CharField(choices=[
                ('C_GSL_NDVI_300M_V2_GLOB', 'Copernicus Global Land Service NDVI 300m v2'),
                ('C_GSL_NDVI_1KM_V3_GLOB', 'Copernicus Global Land Service NDVI 1km v3'),
                ('A_AGRO_NDVI_300M_V3_AFR', 'AuthAgro Service NDVI 1km v3'),
                ('C_GSL_LAI_300M_V1_GLOB', 'Copernicus Global Land Service LAI 300m v1'), (
                    'C_GLS_WB_100M_V1_GLOB',
                    'Copernicus Global Land Service Water Bodies Collection 100m Version 1'),
                (
                    'WB_300M_V2_GLOB',
                    'Copernicus Global Land Service Water Bodies Collection 300m Version 2'),
                ('MSG_3KM_GLOB', 'LSA-SAF Global ET product 3Km'),
                ('WAPOR_L1_AETI_D_AFRICA', 'WAPOR: L1 AETI D AFRICA'),
                ('WAPOR_L1_QUAL_LST_D_AFRICA', 'WAPOR: L1_QUAL_LST_D_AFRICA'),
                ('WAPOR_L1_QUAL_NDVI_D_AFRICA', 'WAPOR: L1_QUAL_NDVI_D_AFRICA'),
                ('WAPOR_L2_AETI_D_TUN', 'WAPOR: L2_AETI_D_TUN'),
                ('WAPOR_L2_QUAL_LST_D_TUN', 'WAPOR: L2_QUAL_LST_D_TUN'),
                ('WAPOR_L2_QUAL_NDVI_D_TUN', 'WAPOR: L2_QUAL_NDVI_D_TUN'),
                ('WAPOR_L2_AETI_D_KEN', 'WAPOR: L2_AETI_D_KEN'),
                ('WAPOR_L2_QUAL_LST_D_KEN', 'WAPOR: L2_QUAL_LST_D_KEN'),
                ('WAPOR_L2_QUAL_NDVI_D_KEN', 'WAPOR: L2_QUAL_NDVI_D_KEN'),
                ('WAPOR_L2_AETI_D_MOZ', 'WAPOR: L2_AETI_D_MOZ'),
                ('WAPOR_L2_QUAL_LST_D_MOZ', 'WAPOR: L2_QUAL_LST_D_MOZ'),
                ('WAPOR_L2_QUAL_NDVI_D_MOZ', 'WAPOR: L2_QUAL_NDVI_D_MOZ'),
                ('WAPOR_L2_AETI_D_RWA', 'WAPOR: L2_AETI_D_DRWA'),
                ('WAPOR_L2_QUAL_LST_D_RWA', 'WAPOR: L2_QUAL_LST_D_RWA'),
                ('WAPOR_L2_QUAL_NDVI_D_RWA', 'WAPOR: L2_QUAL_NDVI_D_RWA'),
                ('WAPOR_L2_AETI_D_ETH', 'WAPOR: WAPOR_L2_AETI_D_ETH'),
                ('WAPOR_L2_QUAL_LST_D_ETH', 'WAPOR: L2_QUAL_LST_D_ETH'),
                ('WAPOR_L2_QUAL_NDVI_D_ETH', 'WAPOR: L2_QUAL_NDVI_D_ETH'),
                ('WAPOR_L2_AETI_D_GHA', 'WAPOR: L2_AETI_GHA'),
                ('WAPOR_L2_QUAL_LST_D_GHA', 'WAPOR: L2_QUAL_LST_D_GHA'),
                ('WAPOR_L2_QUAL_NDVI_GHA', 'WAPOR: L2_QUAL_NDVI_D_GHA'),
                ('VIIRS_1_DAY', 'VIIRS-1day')], max_length=255)),
        migrations.AlterField(
            model_name='eosource',
            name='state',
            field=models.CharField(choices=[('AGRO_NDVI_1KM_V3_AFR', 'AUTH/AGRO/NDVI 1km, V3 Africa'),
                                            ('AGRO_NDVI_300M_V3_AFR', 'AUTH/AGRO/NDVI 300m, V3 Africa'),
                                            ('AGRO_VCI_1KM_V2_AFR', 'AUTH/AGRO/VCI 1km, V2 Africa'),
                                            ('AGRO_LAI_300M_V1_AFR', 'AUTH/AGRO/LAI 300m, V1 Africa'),
                                            ('AGRO_LAI_1KM_V2_AFR', 'AUTH/AGRO/LAI 1km, V2 Africa'),
                                            ('AGRO_WB_100M_ETH', 'AGRO_WB_100_M_ETH'),
                                            ('AGRO_WB_100M_GHA', 'AGRO_WB_100_M_GHA'),
                                            ('AGRO_WB_100M_KEN', 'AGRO_WB_100_M_KEN'),
                                            ('AGRO_WB_100M_MOZ', 'AGRO_WB_100_M_MOZ'),
                                            ('AGRO_WB_100M_NER', 'AGRO_WB_100_M_NER'),
                                            ('AGRO_WB_100M_RWA', 'AGRO_WB_100_M_RWA'),
                                            ('AGRO_WB_100M_TUN', 'AGRO_WB_100_M_TUN'),
                                            ('AGRO_WB_100M_ZAF', 'AGRO_WB_100_M_ZAF'),
                                            ('AGRO_WB_300M_V2_AFR', 'Agro Wb 300M V2 Afr'),
                                            ('MSG_3KM_AFR', 'LSA-SAF 3km Africa'),
                                            ('VIIRS_1DAY_AFR', 'VIIRS 1day AFR')], max_length=255),
        ),
        migrations.RunPython(forward_function, reverse_code=(lambda a, b: None)),
    ]
