version: "3.8"
x-default-env:  &default-env
  environment:
    DATABASE_PASSWORD: postgres
    DATABASE_NAME: postgres
    DATABASE_USERNAME: postgres
    # 'host.docker.internal'
    DATABASE_HOST: "${DATABASE_HOST:-db}" # talk directly to db, rather than through the host
    RABBIT_HOST: rabbit
    RABBIT_PASSWORD: carrot
    DEBUG: 'False'

x-default-volumes:  &default-volumes
  volumes:
    - './docker-entrypoint.sh:/docker-entrypoint'
    - "./mproj:/src"
    - "${LOCAL_FILES_ROOT:-./local_files/local_files_root}:/local_files_root"  # local file repo

services:

  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - "${LOCAL_DB_ROOT:-./local_files/pg_data}:/var/lib/postgresql/data"

  rabbit:
    image: rabbitmq:3.8-management
    ports:
      - 5672:5672
      - 8080:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 5s
      retries: 3
    volumes:
      - "./docker/rabbit/etc/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro"

  worker:
    <<: *default-env
    <<: *default-volumes
    image: vesnikos/eo_engine:latest
    build:
      context: .
      dockerfile: docker/worker/Dockerfile
    entrypoint: '/docker-entrypoint'
    command: [ 'worker' ]

  beat:
    <<: *default-env
    <<: *default-volumes
    image: vesnikos/eo_engine:latest
    entrypoint: '/docker-entrypoint'
    command: [ 'beat' ]

  web:
    <<: *default-env
    <<: *default-volumes
    image: vesnikos/eo_engine:latest
    entrypoint: '/docker-entrypoint'
    restart: "unless-stopped"
    command: [ 'web' ]
    depends_on:
      - rabbit
      - db
    ports:
      - "8000:8000"
